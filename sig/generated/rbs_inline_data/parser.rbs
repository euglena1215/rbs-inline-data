# Generated from lib/rbs_inline_data/parser.rb with RBS::Inline

module RbsInlineData
  class Parser < Prism::Visitor
    class Comments
      MARKER: ::String

      # :: (Array[Prism::Comment]) -> RbsInlineData::Parser::Comments
      def self.from_prism_comments: (Array[Prism::Comment]) -> RbsInlineData::Parser::Comments
    end

    @definitions: Array[RbsInlineData::Parser::TypedDefinition]

    @surronding_class_or_module: Array[Symbol]

    @comments: RbsInlineData::Parser::Comments

    # rubocop:disable Lint/MissingSuper
    # :: (Array[RbsInlineData::Parser::TypedDefinition], RbsInlineData::Parser::Comments) -> void
    def initialize: (Array[RbsInlineData::Parser::TypedDefinition], RbsInlineData::Parser::Comments) -> void

    # :: (Prism::ParseResult) -> Array[RbsInlineData::Parser::TypedDefinition]
    def self.parse: (Prism::ParseResult) -> Array[RbsInlineData::Parser::TypedDefinition]

    # @rbs override
    def visit_class_node: ...

    # @rbs override
    def visit_module_node: ...

    # @rbs override
    def visit_constant_write_node: ...

    private

    # :: (Prism::ClassNode | Prism::ModuleNode) { (Prism::ClassNode | Prism::ModuleNode) -> void } -> void
    def record_surrounding_class_or_module: (Prism::ClassNode | Prism::ModuleNode) { (Prism::ClassNode | Prism::ModuleNode) -> void } -> void

    # :: (Prism::ConstantWriteNode) -> bool
    def define_data?: (Prism::ConstantWriteNode) -> bool

    # :: (Prism::ConstantWriteNode) -> RbsInlineData::Parser::TypedDefinition?
    def extract_definition: (Prism::ConstantWriteNode) -> RbsInlineData::Parser::TypedDefinition?

    # :: (Prism::SymbolNode) -> String
    def type_of: (Prism::SymbolNode) -> String
  end
end
